# name: Publish AutoReqGen Package to PyPI

# on:
#   push:
#     branches:
#       - main

# jobs:
#   pypi-publish:
#     name: Upload AutoReqGen release to PyPI
#     runs-on: ubuntu-latest
#     environment:
#       name: pypi
#       url: https://pypi.org/project/autoreqgen/

#     permissions:
#       id-token: write  # Required for trusted publishing

#     steps:
#       - name: Check if pushed by Harichselvam
#         run: |
#           echo "Committer email: ${{ github.event.head_commit.committer.email }}"
#           if [[ "${{ github.event.head_commit.committer.email }}" != "harichselvamc@gmail.com" ]]; then
#             echo "‚ùå Commit not by harichselvamc@gmail.com. Exiting CI/CD."
#             exit 1
#           fi

#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.x'

#       - name: Install build dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install setuptools wheel twine build

#       - name: Build package
#         run: |
#           python -m build

#       - name: Publish to PyPI
#         uses: pypa/gh-action-pypi-publish@release/v1
#         with:
#           user: __token__
#           password: ${{ secrets.PYPI_API_TOKEN }}




# name: Publish AutoReqGen Package to PyPI

# on:
#   push:
#     branches:
#       - main

# jobs:
#   test:
#     name: Test on ${{ matrix.os }} - Python ${{ matrix.python-version }}
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [ubuntu-latest, windows-latest, macos-latest]
#         python-version: ['3.9', '3.10', '3.11']

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Python ${{ matrix.python-version }}
#         uses: actions/setup-python@v4
#         with:
#           python-version: ${{ matrix.python-version }}

#       - name: Install dependencies
#         run: |
#           pip install --upgrade pip
#           pip install -e .[dev]
#       - name: Run tests
#         run: |
#           python -m unittest discover tests || true  # prevent canceling matrix if one fails
#   pypi-publish:
#     name: Upload AutoReqGen release to PyPI
#     needs: test
#     runs-on: ubuntu-latest
#     environment:
#       name: pypi
#       url: https://pypi.org/project/autoreqgen/

#     permissions:
#       id-token: write  # Required for trusted publishing

#     steps:
#       - name: Check if pushed by Harichselvam
#         run: |
#           echo "Committer email: ${{ github.event.head_commit.committer.email }}"
#           if [[ "${{ github.event.head_commit.committer.email }}" != "harichselvamc@gmail.com" ]]; then
#             echo "‚ùå Commit not by harichselvamc@gmail.com. Exiting CI/CD."
#             exit 1
#           fi
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.11'

#       - name: Install build dependencies
#         run: |
#           pip install --upgrade pip
#           pip install setuptools wheel build
#       - name: Build package
#         run: |
#           python -m build
#       - name: Publish to PyPI (via Trusted Publisher)
#         uses: pypa/gh-action-pypi-publish@release/v1
#         with:
#           print-hash: true

#       - name: Mention in GitHub Packages
#         run: |
#           echo "üìù This package is published to PyPI: https://pypi.org/project/autoreqgen/"
#           echo "üì¶ You can also publish to GitHub Packages if needed: https://github.com/${{ github.repository }}/packages"

name: Publish AutoReqGen Package to PyPI

# Define the events that trigger this workflow
on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the 'main' branch
  workflow_dispatch:  # Allows manual triggering of the workflow from the GitHub UI

jobs:
  test:
    name: Test on ${{ matrix.os }} - Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]  # Test on multiple operating systems
        python-version: ['3.9', '3.10', '3.11']  # Test on multiple Python versions

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Check out the repository code

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -e .[dev]  # Install development dependencies

      - name: Run tests
        run: |
          python -m unittest discover tests || true  # Run tests; allow matrix to continue if one fails

  pypi-publish:
    name: Upload AutoReqGen release to PyPI
    needs: test  # Ensure the test job passes before running this job
    runs-on: ubuntu-latest

    environment:
      name: pypi  # Define an environment for PyPI publishing
      url: https://pypi.org/project/autoreqgen/

    permissions:
      id-token: write  # Required for trusted publishing

    steps:
      - name: Check if pushed by Harichselvam
        run: |
          echo "Committer email: ${{ github.event.head_commit.committer.email }}"
          if [[ "${{ github.event.head_commit.committer.email }}" != "harichselvamc@gmail.com" ]]; then
            echo "‚ùå Commit not by harichselvamc@gmail.com. Exiting CI/CD."
            exit 1
          fi

      - name: Checkout code
        uses: actions/checkout@v3  # Check out the repository code

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          pip install --upgrade pip setuptools wheel build  # Install tools needed for building the package

      - name: Build package
        run: |
          python -m build --sdist --wheel  # Build both source distribution and wheel

      - name: List built files
        run: ls dist/  # Verify the generated files (source and wheel)

      - name: Publish to PyPI (via Trusted Publisher)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true  # Print the hash of the uploaded files for verification

      - name: Mention in GitHub Packages
        run: |
          echo "üìù This package is published to PyPI: https://pypi.org/project/autoreqgen/"
          echo "üì¶ You can also publish to GitHub Packages if needed: https://github.com/${{ github.repository }}/packages"
